[{"/home/nikhilt27/Desktop/cc/new/client/src/components/PendingInvoices.js":"1","/home/nikhilt27/Desktop/cc/new/client/src/App.js":"2","/home/nikhilt27/Desktop/cc/new/client/src/pages/Home.js":"3","/home/nikhilt27/Desktop/cc/new/client/src/components/AddInvoice.js":"4","/home/nikhilt27/Desktop/cc/new/client/src/components/InvoiceOption.js":"5","/home/nikhilt27/Desktop/cc/new/client/src/components/ApprovedInvoice.js":"6","/home/nikhilt27/Desktop/cc/new/client/src/reportWebVitals.js":"7","/home/nikhilt27/Desktop/cc/new/client/src/components/ApprovedInvoiceAdmin.js":"8","/home/nikhilt27/Desktop/cc/new/client/src/components/Login.js":"9","/home/nikhilt27/Desktop/cc/new/client/src/components/Signup.js":"10","/home/nikhilt27/Desktop/cc/new/client/src/components/InvoiceOptionAdmin.js":"11","/home/nikhilt27/Desktop/cc/new/client/src/pages/User.js":"12","/home/nikhilt27/Desktop/cc/new/client/src/components/PendingInvoiceAdmin.js":"13","/home/nikhilt27/Desktop/cc/new/client/src/index.js":"14"},{"size":5358,"mtime":1608541486509,"results":"15","hashOfConfig":"16"},{"size":1452,"mtime":1608408873457,"results":"17","hashOfConfig":"16"},{"size":2199,"mtime":1608489613680,"results":"18","hashOfConfig":"16"},{"size":2929,"mtime":1608491651156,"results":"19","hashOfConfig":"16"},{"size":3143,"mtime":1608451457472,"results":"20","hashOfConfig":"16"},{"size":4725,"mtime":1608541613551,"results":"21","hashOfConfig":"16"},{"size":362,"mtime":1608318963361,"results":"22","hashOfConfig":"16"},{"size":3680,"mtime":1608489582948,"results":"23","hashOfConfig":"16"},{"size":2272,"mtime":1608470265997,"results":"24","hashOfConfig":"16"},{"size":3371,"mtime":1608470290877,"results":"25","hashOfConfig":"16"},{"size":1745,"mtime":1608470648531,"results":"26","hashOfConfig":"16"},{"size":401,"mtime":1608403101568,"results":"27","hashOfConfig":"16"},{"size":4828,"mtime":1608541479033,"results":"28","hashOfConfig":"16"},{"size":500,"mtime":1608531504613,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"fq7g78",{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nikhilt27/Desktop/cc/new/client/src/components/PendingInvoices.js",["66","67","68","69","70"],"import { set } from \"mongoose\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport InvoiceOption from \"../components/InvoiceOption\";\n\nexport default function PendingInvoices() {\n  const [userInvoices, setUserInvoices] = useState([]);\n  // let userInvoices = {};\n\n  const [fromDate, setFromDate] = useState(\n    moment(\"2000-01-01\").format(\"YYYY-MM-DD\")\n  );\n\n  const [toDate, setToDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [optionInvoiceID, setOptionInvoiceID] = useState(\"\");\n\n  useEffect(() => {\n    getUserInvoices();\n  }, []);\n\n  console.log(moment(toDate).add(1, \"d\").format(\"YYYY-MM-DD\"));\n  async function getUserInvoices() {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      console.log(\"token\");\n    }\n\n    const result = await axios.post(\n      \"/invoice/viewInvoice\",\n      {},\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    if (result) {\n      setUserInvoices(result.data);\n\n      console.log(userInvoices);\n    }\n  }\n\n  const openInvoice = (invoice) => {\n    console.log(`clicked ${invoice._id}`);\n    if (optionInvoiceID === \"\") {\n      setOptionInvoiceID(invoice._id);\n    } else {\n      setOptionInvoiceID(\"\");\n    }\n  };\n\n  const getCount = () => {\n    if (userInvoices.length > 0) {\n      const result = userInvoices.filter(\n        (invoice) =>\n          invoice.status === \"PENDING\" &&\n          moment(invoice.date).isBetween(\n            fromDate,\n            moment(toDate).add(1, \"d\").format(\"YYYY-MM-DD\"),\n            undefined,\n            \"[]\"\n          )\n      );\n      return result.length;\n    }\n    return 0;\n  };\n\n  let countTotal = 0;\n\n  const addThisOne = (amount) => {\n    if (amount) {\n      countTotal += Number(amount);\n    }\n  };\n\n  const checkDate = (value) => {\n    if (value != {}) {\n      return moment(value.date).isSame(toDate);\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"invoice-box\">\n      <div className=\"invoice-titles\">PENDING INVOICES</div>\n      <div className=\"home-number-invoices\">\n        <div>{`Total number of invoices: ${getCount()}`}</div>\n        <div>\n          <label>Filter</label>\n          <div className=\"filter-to-from\">\n            <div>\n              <label>From: </label>\n              <input\n                type=\"date\"\n                id=\"start\"\n                name=\"trip-start\"\n                value={fromDate}\n                min=\"2000-01-01\"\n                max={moment().format(\"YYYY-MM-DD\")}\n                onChange={(e) => setFromDate(e.target.value)}\n              />\n            </div>\n            <div>\n              <label>To: </label>\n              <input\n                type=\"date\"\n                id=\"start\"\n                name=\"trip-start\"\n                value={toDate}\n                min=\"2000-01-01\"\n                max={moment().format(\"YYYY-MM-DD\")}\n                onChange={(e) => setToDate(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"home-all-invoice default-title\">\n        <div className=\"invoice-name\">Invoice Name</div>\n        <div className=\"invoice-date\">Invoice Date</div>\n        <div className=\"invoice-amount\">Invoice Amount</div>\n      </div>\n      {userInvoices.length > 0 ? (\n        userInvoices.map((invoice) => {\n          console.log(\n            `invoice ${invoice.status === \"PENDING\"} |date ${\n              moment(invoice.date).isAfter(fromDate) ||\n              moment(invoice.date).isBefore(toDate) ||\n              moment(invoice.date).isSame(fromDate) ||\n              moment(invoice.date).isSame(toDate)\n            } | moment = ${moment(invoice.date).isBetween(\n              fromDate,\n              moment(toDate).add(1, \"d\").format(\"YYYY-MM-DD\"),\n              undefined,\n              \"[]\"\n            )}`\n          );\n          if (\n            invoice.status === \"PENDING\" &&\n            moment(invoice.date).isBetween(\n              fromDate,\n              moment(toDate).add(1, \"d\").format(\"YYYY-MM-DD\"),\n              undefined,\n              \"[]\"\n            )\n          ) {\n            return (\n              <div>\n                <div\n                  key={invoice._id}\n                  onClick={() => {\n                    openInvoice(invoice);\n                  }}\n                  className=\"home-all-invoice\"\n                >\n                  <div className=\"invoice-name\">{invoice.name}</div>\n                  <div className=\"invoice-date\">\n                    {moment(invoice.date).format(\"DD-MM-YY\")}\n                  </div>\n                  <div className=\"invoice-amount\">{invoice.amount}</div>\n                  {addThisOne(invoice.amount)}\n                </div>\n                {optionInvoiceID === invoice._id ? (\n                  <div className=\"home-all-invoice\">\n                    <InvoiceOption invoiceID={invoice._id} />\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n            );\n          }\n        })\n      ) : (\n        <div></div>\n      )}\n      <div className=\"home-all-invoice default-footer\">\n        <div>Total Amount</div>\n        <div></div>\n        <div>{countTotal}</div>\n      </div>\n      {/* <div className=\"open-invoice-box\">Open Invoice</div> */}\n    </div>\n  );\n}\n",["71","72"],"/home/nikhilt27/Desktop/cc/new/client/src/App.js",["73","74","75","76","77","78"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\n\nimport Home from \"./pages/Home\";\nimport User from \"./pages/User\";\nimport AuthRoute from \"./util/AuthRoute\";\n\nfunction App() {\n  const user = \"true\";\n  // const [data, setData] = useState([]);\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     const { data: fet } = await axios.get(\"/invoice/viewInvoices\");\n  //     if (fet) {\n  //       setData(fet);\n  //       console.log(fet);\n  //     }\n  //   }\n  //   fetchData();\n  // }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* {data &&\n          data.map((invoice) => {\n            return (\n              <div key={invoice._id}>\n              <div>\n              <h2>{invoice.email}</h2>\n              </div>\n              </div>\n              );\n            })} */}\n        <div className=\"header-navbar\">\n          <div className=\"app-title\">Invoice Tracker</div>\n        </div>\n\n        <Route exact path=\"/\" component={User} />\n        {/* <Route exact path=\"/Home\" component={Home} /> */}\n        <Route exact path=\"/Home\">\n          {user ? <Home /> : <Redirect to=\"/\" />}\n        </Route>\n\n        {/* <AuthRoute exact path=\"/Home\" component={Home} /> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["79","80"],"/home/nikhilt27/Desktop/cc/new/client/src/pages/Home.js",["81"],"/home/nikhilt27/Desktop/cc/new/client/src/components/AddInvoice.js",["82","83","84"],"/home/nikhilt27/Desktop/cc/new/client/src/components/InvoiceOption.js",["85","86","87","88","89"],"/home/nikhilt27/Desktop/cc/new/client/src/components/ApprovedInvoice.js",["90"],"import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport AddInvoice from \"./AddInvoice\";\n\nexport default function ApprovedInvoice() {\n  const [userInvoices, setUserInvoices] = useState([]);\n  const [fromDate, setFromDate] = useState(\n    moment(\"2000-01-01\").format(\"YYYY-MM-DD\")\n  );\n\n  const [toDate, setToDate] = useState(moment().format(\"YYYY-MM-DD\"));\n\n  const [addInvoiceOpen, setAddInvoiceOpen] = useState(false);\n\n  useEffect(() => {\n    getUserInvoices();\n  }, []);\n\n  async function getUserInvoices() {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      console.log(\"token\");\n    }\n\n    const result = await axios.post(\n      \"/invoice/viewInvoice\",\n      {},\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    if (result) {\n      setUserInvoices(result.data);\n      console.log(result.data);\n    }\n  }\n\n  const getCount = () => {\n    if (userInvoices.length > 0) {\n      const result = userInvoices.filter(\n        (invoice) =>\n          invoice.status === \"APPROVED\" &&\n          moment(invoice.date).isBetween(\n            fromDate,\n            moment(toDate).add(1, \"d\").format(\"YYYY-MM-DD\"),\n            undefined,\n            \"[]\"\n          )\n      );\n      return result.length;\n    }\n    return 0;\n  };\n\n  console.log(toDate);\n  console.log(fromDate);\n  if (moment(\"2016-10-30\").isBetween(fromDate, toDate)) {\n    console.log(\"working\");\n  }\n\n  let countTotal = 0;\n\n  const addThisOne = (amount) => {\n    if (amount) {\n      countTotal += Number(amount);\n    }\n  };\n\n  return (\n    <div>\n      {addInvoiceOpen ? (\n        <AddInvoice />\n      ) : (\n        <div className=\"invoice-box\">\n          <div className=\"invoice-titles\">APPROVED INVOICES</div>\n          <div className=\"home-number-invoices\">\n            <div>{`Total number of invoices: ${getCount()}`}</div>\n            <div>\n              <label>Filter</label>\n              <div className=\"filter-to-from\">\n                <div>\n                  <label>From: </label>\n                  <input\n                    type=\"date\"\n                    id=\"start\"\n                    name=\"trip-start\"\n                    value={fromDate}\n                    min=\"2000-01-01\"\n                    max={moment().format(\"YYYY-MM-DD\")}\n                    onChange={(e) => setFromDate(e.target.value)}\n                  />\n                </div>\n                <div>\n                  <label>To: </label>\n                  <input\n                    type=\"date\"\n                    id=\"start\"\n                    name=\"trip-start\"\n                    value={toDate}\n                    min=\"2000-01-01\"\n                    max={moment().format(\"YYYY-MM-DD\")}\n                    onChange={(e) => setToDate(e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"home-all-invoice default-title\">\n            <div className=\"invoice-name\">Invoice Name</div>\n            <div className=\"invoice-date\">Invoice Date</div>\n            <div className=\"invoice-amount\">Invoice Amount</div>\n          </div>\n          {userInvoices.length > 0 ? (\n            userInvoices.map((invoice) => {\n              //   console.log(invoice);\n              if (\n                invoice.status === \"APPROVED\" &&\n                moment(invoice.date).isBetween(\n                  fromDate,\n                  moment(toDate).add(1, \"d\").format(\"YYYY-MM-DD\"),\n                  undefined,\n                  \"[]\"\n                )\n              ) {\n                return (\n                  <div\n                    key={invoice._id}\n                    onClick={() => {\n                      console.log(`clicked ${invoice._id}`);\n                    }}\n                    className=\"home-all-invoice\"\n                  >\n                    <div className=\"invoice-name\">{invoice.name}</div>\n                    <div className=\"invoice-date\">\n                      {moment(invoice.date).format(\"DD-MM-YY\")}\n                    </div>\n                    <div className=\"invoice-amount\">{invoice.amount}</div>\n                    {addThisOne(invoice.amount)}\n                  </div>\n                );\n              }\n            })\n          ) : (\n            <div></div>\n          )}\n          <div className=\"home-all-invoice default-footer\">\n            <div>Total Amount</div>\n            <div></div>\n            <div>{countTotal}</div>\n          </div>\n        </div>\n      )}\n\n      <div\n        className=\"float-add-button\"\n        onClick={() => setAddInvoiceOpen(!addInvoiceOpen)}\n      >\n        {addInvoiceOpen ? \"Cancel\" : \"Add\"}\n      </div>\n    </div>\n  );\n}\n","/home/nikhilt27/Desktop/cc/new/client/src/reportWebVitals.js",[],"/home/nikhilt27/Desktop/cc/new/client/src/components/ApprovedInvoiceAdmin.js",["91","92","93"],"/home/nikhilt27/Desktop/cc/new/client/src/components/Login.js",["94","95"],"import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Login() {\n  const [loginError, setLoginError] = useState(\"\");\n  const history = useHistory();\n  const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmit = async (data) => {\n    const user = await axios.post(\"/users/login\", data);\n\n    if (user) {\n      if (user.data.token) {\n        // console.log(user.data);\n        localStorage.setItem(\"authToken\", user.data.token);\n        // console.log(jwtDecode(localStorage.getItem(\"authToken\")));\n        history.push(\"/Home\");\n      } else {\n        // console.log(user.data.errors.user);\n        setLoginError(user.data.errors.user);\n      }\n    }\n  };\n\n  return (\n    <div className=\"login-form\">\n      <div className=\"title\">Login</div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"login-form-element\">\n          <label>Email</label>\n          <input\n            name=\"email\"\n            ref={register({\n              required: true,\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: \"invalid email address\",\n              },\n            })}\n          />\n          {errors.email && errors.email.type === \"required\" && (\n            <div className=\"form-error\">*Email is required</div>\n          )}\n          {errors.email && errors.email.type === \"pattern\" && (\n            <div className=\"form-error\">*Invalid email</div>\n          )}\n        </div>\n        <div className=\"login-form-element\">\n          <label>Password</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            ref={register({ required: true })}\n          />\n          {errors.password && (\n            <div className=\"form-error\">*Password is required</div>\n          )}\n        </div>\n        <div className=\"login-form-element\">\n          <div className=\"form-error\">{loginError}</div>\n        </div>\n        <div className=\"submit-button\">\n          <button className=\"button-style\" type=\"submit\">\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/nikhilt27/Desktop/cc/new/client/src/components/Signup.js",["96","97"],"/home/nikhilt27/Desktop/cc/new/client/src/components/InvoiceOptionAdmin.js",["98"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function InvoiceOptionAdmin({ invoiceID }) {\n  const history = useHistory();\n\n  const approveInvoice = async () => {\n    const token = localStorage.getItem(\"authToken\");\n    const user = await axios.post(\n      \"/invoice/approveInvoice\",\n      { invoiceID },\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    if (user) {\n      console.log(user);\n      history.go(0);\n      // history.push(\"/Home\");\n    }\n    console.log(\"approve\");\n  };\n\n  const rejectInvoice = async () => {\n    const token = localStorage.getItem(\"authToken\");\n    const user = await axios.post(\n      \"/invoice/rejectInvoice\",\n      { invoiceID },\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    if (user) {\n      console.log(user);\n      history.go(0);\n      // history.push(\"/Home\");\n    }\n    console.log(\"reject\");\n  };\n\n  return (\n    <div className=\"invoice-option-box\">\n      <div className=\"option-sub-box \">\n        <div className=\"login-form\">\n          <div className=\"title \">Options</div>\n          <div className=\"admin-option\">\n            <div>\n              <button\n                className=\"button-style botton-style-dark light-green\"\n                onClick={() => approveInvoice()}\n              >\n                Approve\n              </button>\n            </div>\n            <div>\n              <button\n                className=\"button-style botton-style-dark\"\n                onClick={() => rejectInvoice()}\n              >\n                Reject\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/nikhilt27/Desktop/cc/new/client/src/pages/User.js",[],"/home/nikhilt27/Desktop/cc/new/client/src/components/PendingInvoiceAdmin.js",["99"],"import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport InvoiceOptionAdmin from \"../components/InvoiceOptionAdmin\";\n\nexport default function PendingInvoiceAdmin() {\n  const [allInvoices, setAllInvoices] = useState([]);\n  const [fromDate, setFromDate] = useState(\n    moment(\"2000-01-01\").format(\"YYYY-MM-DD\")\n  );\n\n  const [toDate, setToDate] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [optionInvoiceID, setOptionInvoiceID] = useState(\"\");\n\n  useEffect(() => {\n    getAllInvoices();\n  }, []);\n  async function getAllInvoices() {\n    const allInvoices = await axios.get(\"/invoice/viewInvoices\");\n    if (allInvoices) {\n      setAllInvoices(allInvoices.data);\n      console.log(allInvoices.data);\n    }\n  }\n\n  const getCount = () => {\n    if (allInvoices.length > 0) {\n      const result = allInvoices.filter(\n        (invoice) =>\n          invoice.status === \"PENDING\" &&\n          moment(invoice.date).isBetween(\n            fromDate,\n            moment(toDate).add(1, \"d\").format(\"YYYY-MM-DD\"),\n            undefined,\n            \"[]\"\n          )\n      );\n      return result.length;\n    }\n    return 0;\n  };\n\n  const openInvoice = (invoice) => {\n    console.log(`clicked ${invoice._id}`);\n    if (optionInvoiceID === \"\") {\n      setOptionInvoiceID(invoice._id);\n    } else {\n      setOptionInvoiceID(\"\");\n    }\n  };\n\n  let countTotal = 0;\n\n  const addThisOne = (amount) => {\n    if (amount) {\n      countTotal += Number(amount);\n    }\n  };\n\n  return (\n    <div className=\"invoice-box\">\n      <div className=\"invoice-titles\">PENDING INVOICES</div>\n      <div className=\"home-number-invoices\">\n        <div>{`Total number of invoices: ${getCount()}`}</div>\n        <div>\n          <label>Filter</label>\n          <div className=\"filter-to-from\">\n            <div>\n              <label>From: </label>\n              <input\n                type=\"date\"\n                id=\"start\"\n                name=\"trip-start\"\n                value={fromDate}\n                min=\"2000-01-01\"\n                max={moment().format(\"YYYY-MM-DD\")}\n                onChange={(e) => setFromDate(e.target.value)}\n              />\n            </div>\n            <div>\n              <label>To: </label>\n              <input\n                type=\"date\"\n                id=\"start\"\n                name=\"trip-start\"\n                value={toDate}\n                min=\"2000-01-01\"\n                max={moment().format(\"YYYY-MM-DD\")}\n                onChange={(e) => setToDate(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"home-all-invoice default-title\">\n        <div className=\"invoice-user\">Invoice User</div>\n        <div className=\"invoice-name\">Invoice Name</div>\n        <div className=\"invoice-date\">Invoice Date</div>\n        <div className=\"invoice-amount\">Invoice Amount</div>\n      </div>\n      {allInvoices.length > 0 ? (\n        allInvoices.map((invoice) => {\n          //   console.log(invoice);\n          if (\n            invoice.status === \"PENDING\" &&\n            moment(invoice.date).isBetween(\n              fromDate,\n              moment(toDate).add(1, \"d\").format(\"YYYY-MM-DD\"),\n              undefined,\n              \"[]\"\n            )\n          ) {\n            return (\n              <div key={invoice._id}>\n                <div\n                  key={invoice._id}\n                  onClick={() => {\n                    openInvoice(invoice);\n                  }}\n                  className=\"home-all-invoice\"\n                >\n                  <div className=\"invoice-user\">{invoice.user}</div>\n                  <div className=\"invoice-name\">{invoice.name}</div>\n                  <div className=\"invoice-date\">\n                    {moment(invoice.date).format(\"DD-MM-YY\")}\n                  </div>\n                  <div className=\"invoice-amount\">{invoice.amount}</div>\n                  {optionInvoiceID === invoice._id ? (\n                    <div className=\"extend-collapse\">-</div>\n                  ) : (\n                    <div className=\"extend-collapse\">+</div>\n                  )}\n                  {addThisOne(invoice.amount)}\n                </div>\n                {optionInvoiceID === invoice._id ? (\n                  <div className=\"home-all-invoice admin-option-wide\">\n                    <InvoiceOptionAdmin invoiceID={invoice._id} />\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n            );\n          }\n        })\n      ) : (\n        <div></div>\n      )}\n      <div className=\"home-all-invoice default-footer\">\n        <div>Total Amount</div>\n        <div></div>\n        <div>{countTotal}</div>\n      </div>\n      {/* <div className=\"open-invoice-box\">Open Invoice</div> */}\n    </div>\n  );\n}\n","/home/nikhilt27/Desktop/cc/new/client/src/index.js",[],{"ruleId":"100","severity":1,"message":"101","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"104","severity":1,"message":"105","line":21,"column":6,"nodeType":"106","endLine":21,"endColumn":8,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"108","line":78,"column":9,"nodeType":"102","messageId":"103","endLine":78,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":79,"column":15,"nodeType":"111","messageId":"112","endLine":79,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":126,"column":36,"nodeType":"115","messageId":"116","endLine":126,"endColumn":38},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"100","severity":1,"message":"121","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":12},{"ruleId":"100","severity":1,"message":"122","line":3,"column":17,"nodeType":"102","messageId":"103","endLine":3,"endColumn":25},{"ruleId":"100","severity":1,"message":"123","line":3,"column":27,"nodeType":"102","messageId":"103","endLine":3,"endColumn":36},{"ruleId":"100","severity":1,"message":"124","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":13},{"ruleId":"100","severity":1,"message":"125","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":17},{"ruleId":"100","severity":1,"message":"126","line":10,"column":8,"nodeType":"102","messageId":"103","endLine":10,"endColumn":17},{"ruleId":"117","replacedBy":"127"},{"ruleId":"119","replacedBy":"128"},{"ruleId":"100","severity":1,"message":"124","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":13},{"ruleId":"100","severity":1,"message":"125","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":17},{"ruleId":"100","severity":1,"message":"129","line":8,"column":22,"nodeType":"102","messageId":"103","endLine":8,"endColumn":35},{"ruleId":"100","severity":1,"message":"130","line":10,"column":35,"nodeType":"102","messageId":"103","endLine":10,"endColumn":40},{"ruleId":"100","severity":1,"message":"122","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"125","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":17},{"ruleId":"100","severity":1,"message":"130","line":9,"column":35,"nodeType":"102","messageId":"103","endLine":9,"endColumn":40},{"ruleId":"109","severity":1,"message":"110","line":14,"column":14,"nodeType":"111","messageId":"112","endLine":14,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":17,"column":23,"nodeType":"111","messageId":"112","endLine":17,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":116,"column":40,"nodeType":"115","messageId":"116","endLine":116,"endColumn":42},{"ruleId":"100","severity":1,"message":"131","line":12,"column":10,"nodeType":"102","messageId":"103","endLine":12,"endColumn":21},{"ruleId":"100","severity":1,"message":"132","line":12,"column":23,"nodeType":"102","messageId":"103","endLine":12,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":90,"column":35,"nodeType":"115","messageId":"116","endLine":90,"endColumn":37},{"ruleId":"100","severity":1,"message":"125","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":17},{"ruleId":"100","severity":1,"message":"130","line":10,"column":35,"nodeType":"102","messageId":"103","endLine":10,"endColumn":40},{"ruleId":"100","severity":1,"message":"125","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":17},{"ruleId":"100","severity":1,"message":"133","line":10,"column":10,"nodeType":"102","messageId":"103","endLine":10,"endColumn":20},{"ruleId":"100","severity":1,"message":"122","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":103,"column":35,"nodeType":"115","messageId":"116","endLine":103,"endColumn":37},"no-unused-vars","'set' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserInvoices'. Either include it or remove the dependency array.","ArrayExpression",["134"],"'checkDate' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["135"],"no-negated-in-lhs",["136"],"'logo' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'jwtDecode' is defined but never used.","'AuthRoute' is defined but never used.",["135"],["136"],"'setLoginError' is assigned a value but never used.","'watch' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'setTotalAmount' is assigned a value but never used.","'loginError' is assigned a value but never used.",{"desc":"137","fix":"138"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getUserInvoices]",{"range":"139","text":"140"},[606,608],"[getUserInvoices]"]